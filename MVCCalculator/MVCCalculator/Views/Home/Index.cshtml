@model MVCCalculator.Models.Calculator

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<h4>
    Calculator @if (ViewBag.Name != null)
    {
        <text>for @ViewBag.Name</text>
    }
</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Number1" class="control-label"></label>
                <input asp-for="Number1" class="form-control" />
                <span asp-validation-for="Number1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Number2" class="control-label"></label>
                <input asp-for="Number2" class="form-control" />
                <span asp-validation-for="Number2" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="Result" class="control-label"></label>
                <input asp-for="Result" class="form-control" />
                <span asp-validation-for="Result" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="Operation" class="control-label"></label>
@*                <input asp-for="Operation" class="form-control" />*@
                @Html.DropDownListFor(model => model.Operation, new SelectList(Model.OperationAvailable, "Value", "Text"))
                <span asp-validation-for="Operation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Calculate" class="btn btn-primary" />
            </div>
            <p>Result: @Model.Result</p>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
